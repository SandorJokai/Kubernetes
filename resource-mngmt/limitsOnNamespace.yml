#This definiton only limits resources in an object, but what if a user in the namespace launch it in a hundred times?
#It can be multiplicate? Of course, but I will demonstrate how we can limit the WHOLE namespace's resources in the next
#yaml file: dev.yml.


#Let's create a namespace called test: kubectl create ns test
#Once we created, let's launch the limitsOnNamespace yaml file: kubectl --namespace test apply -f limitsOnNamespace
#To type this command, we can see what are the limits in the namespace: kubectl describe namespaces test

apiVersion: v1
kind: LimitRange
metadata:
  name: limit-range
spec:
  limits:
  - default:
      memory: 50Mi
      cpu: 0.2
    defaultRequest:
      memory: 30Mi
      cpu: 0.05
    max:
      memory: 80Mi
      cpu: 0.5
    min:
      memory: 10Mi
      cpu: 0.01
    type: Container
    
#According to this file, we set up a resource limits in test namespace, thus anyone creating objects, the defaults
#can be limited by "default" and "defaultRequest", if they give some values, the values must be within the interval
#otherwise shows some error message that we can check typing this: kubectl -n test get events -w.
